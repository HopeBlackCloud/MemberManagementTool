#pragma once

#include "QString.h"

#ifndef SAFE_DELETE
#define SAFE_DELETE(p) { if((p)) { delete (p); (p) = NULL; } }
#endif 

const int TIME_UPDATE_FREQUENCY  = 1000; // milisecond

static const QString DOCS_PATH   = QString("/Docs/");
static const QString PHOTO_PATH  = QString("/Fotos/");
static const QString CONFIG_PATH = QString("/Config/");

static const QString ORGANIZATION_FILE = CONFIG_PATH + QString("Organization.xml");

typedef enum QUERY_TYPE_ENUM
{
	QUERY_TYPE_ENUM_NAME,
	QUERY_TYPE_ENUM_SURNAME,
	QUERY_TYPE_ENUM_TCNO,
	QUERY_TYPE_ENUM_CELLPHONE,
	QUERY_TYPE_ENUM_SEX,
	QUERY_TYPE_ENUM_EDU_LEVEL,
	QUERY_TYPE_ENUM_EDU_STATUS,
	QUERY_TYPE_ENUM_MEMBER_ID,
	QUERY_TYPE_ENUM_MEMBER_TYPE,
	QUERY_TYPE_ENUM_MEMBER_STATUS,
	QUERY_TYPE_ENUM_MEMBER_BLOOD_TYPE,
	QUERY_TYPE_ENUM_MEMBER_ADDRESS,
	QUERY_TYPE_ENUM_ALL
} QUERY_TYPE_ENUM;

typedef enum PAGE_TYPE_ENUM
{
	PAGE_TYPE_ENUM_ADD_MEMBER,
	PAGE_TYPE_ENUM_MEMBER_INFO,
	PAGE_TYPE_ENUM_EXPORT,
	PAGE_TYPE_ENUM_MEMBER_FEE,
	PAGE_TYPE_ENUM_ENVANTER,
    PAGE_TYPE_ENUM_LIBRARY,
	PAGE_TYPE_ENUM_INCOMEEXPENSE,
	PAGE_TYPE_ENUM_SEND_SMS
} PAGE_TYPE_ENUM;

typedef enum SUBMENU_TYPE_ENUM
{
	SUBMENU_TYPE_ENUM_NO_SUBMENU,
	SUBMENU_TYPE_ENUM_MEMBER_OPERATIONS,
	SUBMENU_TYPE_ENUM_ORGANIZATION_OPERATIONS,
	SUBMENU_TYPE_ENUM_EDUCATION_OPERATIONS,
	SUBMENU_TYPE_ENUM_SYSTEM_SETUP,
	SUBMENU_TYPE_ENUM_SHUTDOWN
} SUBMENU_TYPE_ENUM;

typedef enum USER_TYPE_ENUM
{
	USER_TYPE_OPERATOR = 0,
	USER_TYPE_ADMIN
} USER_TYPE_ENUM;

typedef enum SETTINGS_TYPE_ENUM
{
	SETTINGS_TYPE_USERS = 0,
	SETTINGS_TYPE_FEES,
	SETTINGS_TYPE_LOGS
} SETTINGS_TYPE_ENUM;